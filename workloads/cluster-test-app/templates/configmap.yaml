apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.app.name }}-config
  namespace: {{ .Values.app.namespace }}
  labels:
    app.kubernetes.io/name: {{ .Values.app.name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
data:
  index.html: |
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Cluster Test App - {{ .Values.environment | title }}</title>
        <style>
            body { 
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                margin: 0; padding: 40px; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                min-height: 100vh; color: white;
            }
            .container { 
                max-width: 800px; margin: 0 auto; background: rgba(255,255,255,0.1);
                padding: 40px; border-radius: 20px; backdrop-filter: blur(10px);
                box-shadow: 0 8px 32px rgba(0,0,0,0.1);
            }
            h1 { text-align: center; margin-bottom: 30px; font-size: 2.5rem; }
            .status-card { 
                background: rgba(255,255,255,0.1); padding: 20px; margin: 20px 0;
                border-radius: 10px; border-left: 4px solid #4CAF50;
            }
            .info-grid { 
                display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
                gap: 20px; margin: 30px 0;
            }
            .info-item { 
                background: rgba(255,255,255,0.1); padding: 20px; border-radius: 10px;
                text-align: center;
            }
            .info-label { font-size: 0.9rem; opacity: 0.8; margin-bottom: 5px; }
            .info-value { font-size: 1.4rem; font-weight: bold; }
            .emoji { font-size: 2rem; margin-bottom: 10px; }
            button { 
                background: rgba(255,255,255,0.2); color: white; border: 2px solid rgba(255,255,255,0.3);
                padding: 12px 24px; border-radius: 25px; cursor: pointer; margin: 10px 5px;
                transition: all 0.3s ease; font-size: 1rem;
            }
            button:hover { 
                background: rgba(255,255,255,0.3); transform: translateY(-2px);
                box-shadow: 0 4px 12px rgba(0,0,0,0.2);
            }
            .health-indicator { 
                display: inline-block; width: 12px; height: 12px; border-radius: 50%;
                background: #4CAF50; margin-right: 8px; animation: pulse 2s infinite;
            }
            @keyframes pulse {
                0% { box-shadow: 0 0 0 0 rgba(76, 175, 80, 0.7); }
                70% { box-shadow: 0 0 0 10px rgba(76, 175, 80, 0); }
                100% { box-shadow: 0 0 0 0 rgba(76, 175, 80, 0); }
            }
            .footer { text-align: center; margin-top: 40px; opacity: 0.7; font-size: 0.9rem; }
        </style>
    </head>
    <body>
        <div class="container">
            <h1>üöÄ Cluster Test Application</h1>
            
            <div class="status-card">
                <div class="health-indicator"></div>
                <strong>Cluster Status: Healthy</strong>
                <p>This application is running successfully in your Kubernetes cluster.</p>
            </div>

            <div class="info-grid">
                <div class="info-item">
                    <div class="emoji">üåç</div>
                    <div class="info-label">Environment</div>
                    <div class="info-value">{{ .Values.environment | title }}</div>
                </div>
                <div class="info-item">
                    <div class="emoji">üìç</div>
                    <div class="info-label">Region</div>
                    <div class="info-value">{{ .Values.region }}</div>
                </div>
                <div class="info-item">
                    <div class="emoji">‚öôÔ∏è</div>
                    <div class="info-label">Cluster</div>
                    <div class="info-value">{{ .Values.cluster_name }}</div>
                </div>
                <div class="info-item">
                    <div class="emoji">üîó</div>
                    <div class="info-label">Service Mesh</div>
                    <div class="info-value">{{- if .Values.linkerd.inject }}Linkerd{{- else }}None{{- end }}</div>
                </div>
            </div>

            <div style="text-align: center; margin: 30px 0;">
                <button onclick="testHealth()">üè• Health Check</button>
                <button onclick="testDNS()">üåê DNS Test</button>
                <button onclick="viewPodInfo()">üê≥ Pod Info</button>
                <button onclick="testConnectivity()">üì° Connectivity</button>
            </div>

            <div id="test-results" style="margin-top: 20px;"></div>

            {{- if .Values.linkerd.inject }}
            <div class="status-card" style="border-left-color: #2196F3;">
                <strong>üîó Linkerd Service Mesh Enabled</strong>
                <p>This application is automatically protected with mTLS encryption and observability.</p>
                <p><strong>Commands to check Linkerd status:</strong></p>
                <pre style="background: rgba(0,0,0,0.2); padding: 15px; border-radius: 5px; margin: 10px 0; overflow-x: auto;"><code># Check Linkerd injection
kubectl get pods -n {{ .Values.app.namespace }} -o jsonpath='{{`{.items[*].spec.containers[*].name}`}}'

# View Linkerd stats  
linkerd viz -n {{ .Values.app.namespace }} stat deploy

# Open Linkerd dashboard
linkerd viz dashboard</code></pre>
            </div>
            {{- end }}

            <div class="footer">
                <p>üõ†Ô∏è <strong>Cluster Test Application</strong> - Deployed via GitOps</p>
                <p>Namespace: {{ .Values.app.namespace }} | Replicas: {{ .Values.replicaCount }}</p>
            </div>
        </div>

        <script>
            function showResult(message, isSuccess = true) {
                const results = document.getElementById('test-results');
                const statusColor = isSuccess ? '#4CAF50' : '#f44336';
                results.innerHTML = `
                    <div style="background: rgba(255,255,255,0.1); padding: 15px; border-radius: 10px; 
                                border-left: 4px solid ${statusColor};">
                        <strong>${message}</strong>
                        <p><small>Timestamp: ${new Date().toLocaleString()}</small></p>
                    </div>
                `;
            }

            function testHealth() {
                showResult('‚úÖ Health Check: Application is running and responsive');
            }

            function testDNS() {
                showResult('‚úÖ DNS Test: Kubernetes DNS resolution is working');
            }

            function viewPodInfo() {
                showResult(`üê≥ Pod Info: Running in {{ .Values.app.namespace }} namespace with {{ .Values.replicaCount }} replicas`);
            }

            function testConnectivity() {
                showResult('‚úÖ Connectivity Test: Network connectivity is functional');
            }

            // Auto-run health check on page load
            window.onload = function() {
                setTimeout(testHealth, 1000);
            };
        </script>
    </body>
    </html>

