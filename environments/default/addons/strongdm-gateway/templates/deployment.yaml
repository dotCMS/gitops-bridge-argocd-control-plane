apiVersion: apps/v1
kind: Deployment
metadata:
  name: strongdm-gateway
  namespace: strongdm-system
  labels:
    app.kubernetes.io/name: strongdm-gateway
    app.kubernetes.io/instance: {{ .Values.environment }}
    app.kubernetes.io/component: security
    app.kubernetes.io/part-of: gitops-bridge
spec:
  replicas: {{ .Values.gateway.replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: strongdm-gateway
      app.kubernetes.io/instance: {{ .Values.environment }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: strongdm-gateway
        app.kubernetes.io/instance: {{ .Values.environment }}
        app.kubernetes.io/component: security
      annotations:
        # Force restart when secrets or config change
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
    spec:
      serviceAccountName: strongdm-gateway
      securityContext:
        {{- toYaml .Values.gateway.securityContext | nindent 8 }}
      containers:
      - name: strongdm-gateway
        image: "{{ .Values.gateway.image.repository }}:{{ .Values.gateway.image.tag }}"
        imagePullPolicy: {{ .Values.gateway.image.pullPolicy }}
        env:
        # strongDM Configuration
        - name: SDM_ADMIN_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ .Values.strongdm.admin_token_secret }}
              key: token
        - name: SDM_RELAY_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ .Values.strongdm.relay_token_secret }}
              key: token
        # Environment configuration from ConfigMap
        envFrom:
        - configMapRef:
            name: strongdm-gateway-config
        ports:
        - name: strongdm
          containerPort: 5432
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: 5432
          initialDelaySeconds: 30
          timeoutSeconds: 5
          periodSeconds: 30
          failureThreshold: 3
        readinessProbe:
          tcpSocket:
            port: 5432
          initialDelaySeconds: 10
          timeoutSeconds: 5
          periodSeconds: 10
          failureThreshold: 3
        resources:
          {{- toYaml .Values.gateway.resources | nindent 10 }}
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: var-run
          mountPath: /var/run
      volumes:
      - name: tmp
        emptyDir: {}
      - name: var-run
        emptyDir: {}
      # Spread pods across nodes for high availability
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - strongdm-gateway
              topologyKey: kubernetes.io/hostname
      tolerations:
      - key: "kubernetes.io/arch"
        operator: "Equal"
        value: "amd64"
        effect: "NoSchedule"

